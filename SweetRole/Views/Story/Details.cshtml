@model SweetRole.ViewModels.DetailsStoryViewModel

@{
    ViewData["Title"] = "@m";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@Html.DisplayFor(model => model.Story.Title)</h1>

<div>
    <h3>@Html.DisplayFor(model => model.Story.Genre)</h3>
    <a class="btn btn-primary" asp-controller="Story" asp-action="Edit" asp-route-id="@Model.Story.StoryId" role="button">Edit Story</a>
    <hr />
</div>
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddCharacter">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Users" class="control-label"></label>
                <select asp-for="Users" asp-items="@Model.Users" class="form-control"></select>
                <span asp-validation-for="Users" class="text-danger"></span>
            </div>
            <div class="form-group">
                @* TODO: Add Functionality*@
                <input type="submit" value="Share Story" class="btn btn-primary" />
            </div>
        </form>
    </div>
 </div>
    @*TODO: Remove when done testing*@
    @*<div>

            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.StoryId)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.StoryId)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Title)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Title)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.DateCreated)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.DateCreated)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Genre)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Genre)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.SweetRoleUserId)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.SweetRoleUserId)
                </dd>
            </dl>
        </div>*@

    <h3>Scenes</h3>
    <hr />
    <p>
        <a class="btn btn-primary" asp-controller="Scene" asp-action="Create" role="button">Add Scene</a>
    </p>
    @if (Model.Story.Scenes != null)
    {
        <table class="table" title="@Html.DisplayNameFor(model => Model.Story.Scenes)">

            <tr>

                <th>Scene Title</th>

                <th>Setting</th>
                @*TODO: Remove when no longer needed for testing*@
                <th>Scene Story Id</th>

            </tr>

            @foreach (var item in Model.Story.Scenes)
            {
                <tr>

                    <td>
                        <a asp-controller="Scene" asp-action="Details" asp-route-id="@item.SceneId">
                            @Html.DisplayFor(modelItem => item.Name)
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Setting)
                    </td>
                    @*TODO: Remove when no longer needed for testing*@
                    <td>
                        @Html.DisplayFor(modelItem => item.StoryID)
                    </td>
                </tr>
            }

        </table>
    }
    else
    {
        <p>No Scenes created yet</p>
        <a class="btn btn-primary" asp-controller="Scene" asp-action="Create" role="button">Add Scene</a>
    }


    <div>
        <a asp-action="Index">Back to List</a>
    </div>
